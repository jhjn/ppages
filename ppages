#!/bin/bash
#
# Requires: pp, cmark (rsync for deploy)

CONFIG="config"
TMPL_EXT=".template.html"
BOLD=$'\e[1m'
RED=$'\e[31m'
RESET=$'\e[0m'

die () {
    echo "Error: $1" >&2
    exit 1
}

careful_cat () {
    [ -f "$1" ] && echo "Skipping writing "$1" as it exists." >&2 || cat > "$1"
}

usage () {
    echo "Usage: ${0##*/} v0.1.0"
    echo
    echo "Commands:"
    echo "    init) write example config and templates to PWD"
    echo "   build) generate site by compiling the templates and markdown"
    echo "  deploy) copy the site files to the configured remote"
    echo "    help) display this help"
    echo ""
    echo "Template System:"
    echo "  - Files named ${BOLD}*${RESET}.${RED}bar${RESET}.md are processed using ${RED}bar${RESET}.template.html"
    echo "  - A file named ${BOLD}dir/foo${RESET}.${RED}bar${RESET}.md becomes ${BOLD}dir/foo${RESET}.html"
    echo "  - Templates and markdown are customised with ${BOLD}pp${RESET} syntax, see pp(1)"
    echo "  - See '${0##*/} init' for an example config and template setup"
    echo "  - The example template pipes the ${RED}md${RESET} file through ${BOLD}pp${RESET} into ${BOLD}cmark${RESET}"
}

get_from_cfg () {
    sed -nr "s/^$1 *= *(.*) */\1/p" $CONFIG
}

deploy () {
    REMOTE_DEPLOY_LOCATION="$(get_from_cfg remote)"
    # deploy all files (following filter) to server http dir.
    # -a archive, -v verbose, -c checksum
    rsync -avc ./ "$REMOTE_DEPLOY_LOCATION"  \
        --filter '- .git'     \
        --filter '- *.sh'     \
        --filter '- *.t.html' \
        --filter '- *.p.md' \
        --filter '- *.awk'    \
        --filter '- *.swp'    \
        --delete
}

build () {
    export PPAGES_AUTHOR="$(get_from_cfg author)"
    export PPAGES_TITLE="$(get_from_cfg title)"
    export PPAGES_BG="$(get_from_cfg background)"

    for template in $(fd . -e "$TMPL_EXT" -x echo {/}); do
        page_type="${template%%$TMPL_EXT}"   # Here we have:
        page_ext=".$page_type.md"            #   p.template.html -> foo.p.md
        echo "Building template type '$page_type':"
        for page in $(fd . -e "$page_ext"); do
            echo " - processing ${page##./}"
            INPUT_FILE="$page" pp < "$template" > ${page%%$page_ext}.html
        done
    done
}

init () {
    careful_cat config << EOF
[example.com]
author = Anon.
title = My website
# Defaults to pale-beige: Try pale-blue '#dee'
background = #fed
remote = hostname:/var/www
EOF
    careful_cat style.css << EOF
body{
	margin: 40px auto;
	max-width: 650px;
	color: #222;
	padding: 0 10px;
}
h1,h2,h3{font-family: sans-serif}
a,a:visited{color:#555}
img{max-width:100%}
pre{overflow:auto}
table,th,td{border:1px solid;padding:.5rem;border-collapse: collapse}

nav ul{display: none; list-style: none; padding: 0}
nav #checkbox{opacity: 0}
nav #checkbox:checked + ul{display: block}
EOF
    careful_cat p.template.html << EOF
!!# Default 'Page' Template
!!#=========================
!!# See pp(1) for syntax: !!, !{...}!
!!# See 'ppages help' for templating documentation
<!DOCTYPE html>
<html lang=en>
<head>
    <title>!{echo \$PPAGES_TITLE}!</title>
    <meta charset=utf-8>
    <meta name=author content="{echo \$PPAGES_AUTHOR}" name=author>
    <meta name=viewport content="width=device-width,initial-scale=1">
    <link rel="shortcut icon" href="/favicon.svg"/>
    <link rel="stylesheet" type="text/css" href="/style.css">
</head>
<body style="background:!{echo \$PPAGES_BG}!">
<header style="display:flex;justify-content:space-between">
    <h1 style="display:inline-block;font-size:1rem;margin-top:0.25em">
    <a href="/">!{echo \$PPAGES_TITLE}!</a>
    </h1>
!!# The nav bar is compiled from a file if it exists
!! [ ! -f nav.md ] || echo '<nav style="display:inline-block;-webkit-user-select:none">'
!! [ ! -f nav.md ] || echo ' <label style="padding: 5px;outline: 1px solid" for="checkbox">Menu â–¼</label>'
!! [ ! -f nav.md ] || echo ' <input id="checkbox" type="checkbox" />'
!! [ ! -f nav.md ] || cmark nav.md
!! [ ! -f nav.md ] || echo '</nav>'
</header>
!!# Below we are piping the found *.<type>.md file through pandoc
!!#   <type> in this file's name comes from <type>.template.html
!! pandoc <\$INPUT_FILE
</body>
!!# Optional footer with link to the generator
<footer style="margin: 4em auto; text-align:right">
<hr>
<p>built with <a href="https://github.com/jhjn/ppages">ppages</a></p>
</footer>
</html>
EOF
    careful_cat nav.md << EOF
* [home](/)
* [blog](/blog)
* [research](/research)
EOF
    careful_cat index.p.md << EOF
# Homepage
Welcome to my site!

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud [exercitation](https://wikipedia.org) ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.

Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.

## Code looks good
Here is an important addition to an HTML head:
\`\`\`
<head>
    ...
    <meta name=viewport content="width=device-width,initial-scale=1">
    ...
</head>
\`\`\`

## ...and tables too

------------------------------------------------------------------------
 Centered   Default           Right Left
  Header    Aligned         Aligned Aligned
----------- ------- --------------- ------------------------------------
   First    row                12.0 Example of a row that
                                    spans multiple lines.

  Second    row                 5.0 Here's another one. Note
                                    the blank line between
                                    rows.
------------------------------------------------------------------------

Table: Table 1: shows off markdown + styling
EOF
}


[ $# -gt 1 ] && die "No arguments are taken. See 'ppages help'."
case $1 in
    init) init;;
    deploy) build && deploy;;
    build) build;;
    help | "") usage;;
esac
